-- Generated by Oracle SQL Developer Data Modeler 19.4.0.350.1424
--   at:        2020-03-11 20:35:28 CLST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE categorias (
    categoria_id  INTEGER NOT NULL,
    nombre        VARCHAR2(50 CHAR) NOT NULL,
    descripcion   VARCHAR2(250)
);

ALTER TABLE categorias ADD CONSTRAINT categorias_pk PRIMARY KEY ( categoria_id );

CREATE TABLE clientes (
    cliente_id  INTEGER NOT NULL,
    rut         VARCHAR2(15 CHAR) NOT NULL,
    nombre      VARCHAR2(50 CHAR) NOT NULL,
    direccion   VARCHAR2(150 CHAR) NOT NULL
);

ALTER TABLE clientes ADD CONSTRAINT clientes_pk PRIMARY KEY ( cliente_id );

CREATE TABLE productos (
    producto_id   INTEGER NOT NULL,
    nombre        VARCHAR2(50 CHAR) NOT NULL,
    precio        INTEGER NOT NULL,
    stock         FLOAT NOT NULL,
    categoria_id  INTEGER NOT NULL,
    proveedor_id  INTEGER NOT NULL
);

ALTER TABLE productos ADD CONSTRAINT productos_pk PRIMARY KEY ( producto_id );

CREATE TABLE proveedores (
    proveedor_id  INTEGER NOT NULL,
    rut           VARCHAR2(15 CHAR) NOT NULL,
    nombre        VARCHAR2(50 CHAR) NOT NULL,
    direccion     VARCHAR2(200 CHAR) NOT NULL,
    telefono      VARCHAR2(20 CHAR) NOT NULL,
    url           VARCHAR2(250 CHAR)
);

ALTER TABLE proveedores ADD CONSTRAINT proveedores_pk PRIMARY KEY ( proveedor_id );

CREATE TABLE telefonos (
    telefono_id  INTEGER NOT NULL,
    codigo_area  INTEGER NOT NULL,
    numero       INTEGER NOT NULL,
    cliente_id   INTEGER NOT NULL
);

ALTER TABLE telefonos ADD CONSTRAINT telefonos_pk PRIMARY KEY ( telefono_id );

CREATE TABLE venta_producto (
    producto_id  INTEGER NOT NULL,
    venta_id     INTEGER NOT NULL,
    cantidad     FLOAT NOT NULL
);

ALTER TABLE venta_producto ADD CONSTRAINT venta_producto_pk PRIMARY KEY ( producto_id,
                                                                          venta_id );

CREATE TABLE ventas (
    venta_id    INTEGER NOT NULL,
    fecha       DATE NOT NULL,
    descuento   INTEGER DEFAULT 0,
    cliente_id  INTEGER NOT NULL
);

ALTER TABLE ventas ADD CONSTRAINT ventas_pk PRIMARY KEY ( venta_id );

ALTER TABLE productos
    ADD CONSTRAINT categorias_fk FOREIGN KEY ( categoria_id )
        REFERENCES categorias ( categoria_id );

ALTER TABLE telefonos
    ADD CONSTRAINT clientes_fk FOREIGN KEY ( cliente_id )
        REFERENCES clientes ( cliente_id );

ALTER TABLE ventas
    ADD CONSTRAINT clientes_fkv1 FOREIGN KEY ( cliente_id )
        REFERENCES clientes ( cliente_id );

ALTER TABLE venta_producto
    ADD CONSTRAINT productos_fk FOREIGN KEY ( producto_id )
        REFERENCES productos ( producto_id );

ALTER TABLE productos
    ADD CONSTRAINT proveedores_fk FOREIGN KEY ( proveedor_id )
        REFERENCES proveedores ( proveedor_id );

ALTER TABLE venta_producto
    ADD CONSTRAINT ventas_fk FOREIGN KEY ( venta_id )
        REFERENCES ventas ( venta_id );

CREATE SEQUENCE categorias_categoria_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER categorias_categoria_id_trg BEFORE
    INSERT ON categorias
    FOR EACH ROW
    WHEN ( new.categoria_id IS NULL )
BEGIN
    :new.categoria_id := categorias_categoria_id_seq.nextval;
END;
/

CREATE SEQUENCE clientes_cliente_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER clientes_cliente_id_trg BEFORE
    INSERT ON clientes
    FOR EACH ROW
    WHEN ( new.cliente_id IS NULL )
BEGIN
    :new.cliente_id := clientes_cliente_id_seq.nextval;
END;
/

CREATE SEQUENCE productos_producto_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER productos_producto_id_trg BEFORE
    INSERT ON productos
    FOR EACH ROW
    WHEN ( new.producto_id IS NULL )
BEGIN
    :new.producto_id := productos_producto_id_seq.nextval;
END;
/

CREATE SEQUENCE proveedores_proveedor_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER proveedores_proveedor_id_trg BEFORE
    INSERT ON proveedores
    FOR EACH ROW
    WHEN ( new.proveedor_id IS NULL )
BEGIN
    :new.proveedor_id := proveedores_proveedor_id_seq.nextval;
END;
/

CREATE SEQUENCE telefonos_telefono_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER telefonos_telefono_id_trg BEFORE
    INSERT ON telefonos
    FOR EACH ROW
    WHEN ( new.telefono_id IS NULL )
BEGIN
    :new.telefono_id := telefonos_telefono_id_seq.nextval;
END;
/

CREATE SEQUENCE ventas_venta_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ventas_venta_id_trg BEFORE
    INSERT ON ventas
    FOR EACH ROW
    WHEN ( new.venta_id IS NULL )
BEGIN
    :new.venta_id := ventas_venta_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             0
-- ALTER TABLE                             13
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
